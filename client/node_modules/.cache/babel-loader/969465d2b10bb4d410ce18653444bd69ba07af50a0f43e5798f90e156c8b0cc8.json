{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\computer place\\\\Desktop\\\\exam\\\\e-commerce website\\\\ecommerce-app\\\\client\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Load cart from localStorage on mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      setCartItems(JSON.parse(savedCart));\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n  const addToCart = (product, quantity = 1) => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item._id === product._id);\n      if (existingItem) {\n        return prevItems.map(item => item._id === product._id ? {\n          ...item,\n          quantity: item.quantity + quantity\n        } : item);\n      } else {\n        return [...prevItems, {\n          ...product,\n          quantity\n        }];\n      }\n    });\n  };\n  const removeFromCart = productId => {\n    setCartItems(prevItems => prevItems.filter(item => item._id !== productId));\n  };\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    setCartItems(prevItems => prevItems.map(item => item._id === productId ? {\n      ...item,\n      quantity\n    } : item));\n  };\n  const clearCart = () => {\n    setCartItems([]);\n  };\n  const getCartTotal = () => {\n    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n  const getCartItemsCount = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n  const toggleCart = () => {\n    setIsOpen(!isOpen);\n  };\n  const value = {\n    cartItems,\n    isOpen,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartTotal,\n    getCartItemsCount,\n    toggleCart,\n    setIsOpen\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"jz1BkMmrZoIxsaXpNnxAwH7Quo8=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","isOpen","setIsOpen","savedCart","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","product","quantity","prevItems","existingItem","find","item","_id","map","removeFromCart","productId","filter","updateQuantity","clearCart","getCartTotal","reduce","total","price","getCartItemsCount","toggleCart","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/computer place/Desktop/exam/e-commerce website/ecommerce-app/client/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Load cart from localStorage on mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      setCartItems(JSON.parse(savedCart));\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  const addToCart = (product, quantity = 1) => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item._id === product._id);\n      \n      if (existingItem) {\n        return prevItems.map(item =>\n          item._id === product._id\n            ? { ...item, quantity: item.quantity + quantity }\n            : item\n        );\n      } else {\n        return [...prevItems, { ...product, quantity }];\n      }\n    });\n  };\n\n  const removeFromCart = (productId) => {\n    setCartItems(prevItems => prevItems.filter(item => item._id !== productId));\n  };\n\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n\n    setCartItems(prevItems =>\n      prevItems.map(item =>\n        item._id === productId ? { ...item, quantity } : item\n      )\n    );\n  };\n\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  const getCartTotal = () => {\n    return cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\n  };\n\n  const getCartItemsCount = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  const toggleCart = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const value = {\n    cartItems,\n    isOpen,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartTotal,\n    getCartItemsCount,\n    toggleCart,\n    setIsOpen\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}